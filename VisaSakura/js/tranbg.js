"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,i){return e&&_defineProperties(t.prototype,e),i&&_defineProperties(t,i),t}var sakuraBg=function(i,e){console.log("init");var s=2*Math.PI;function l(){return 2*Math.random()-1}var h=function(){function t(){_classCallCheck(this,t),this.velocity=new Array(3),this.rotation=new Array(3),this.position=new Array(3),this.euler=new Array(3),this.size=1,this.alpha=1,this.zkey=0}return _createClass(t,[{key:"setVelocity",value:function(t,e,i){this.velocity[0]=t,this.velocity[1]=e,this.velocity[2]=i}},{key:"setRotation",value:function(t,e,i){this.rotation[0]=t,this.rotation[1]=e,this.rotation[2]=i}},{key:"setPosition",value:function(t,e,i){this.position[0]=t,this.position[1]=e,this.position[2]=i}},{key:"setEulerAngles",value:function(t,e,i){this.euler[0]=t,this.euler[1]=e,this.euler[2]=i}},{key:"setSize",value:function(t){this.size=t}},{key:"update",value:function(t){this.position[0]+=this.velocity[0]*t,this.position[1]+=this.velocity[1]*t,this.position[2]+=this.velocity[2]*t,this.euler[0]+=this.rotation[0]*t,this.euler[1]+=this.rotation[1]*t,this.euler[2]+=this.rotation[2]*t}}]),t}(),r=function(){function e(t){_classCallCheck(this,e),this.scene=t,this.deltaTime=0,768<window.innerWidth?this.particleControl={particleNum:i,area:[20,40,40]}:this.particleControl={particleNum:3*i,area:[50,10,10]},this.geometry=new THREE.BufferGeometry,this.positions=new Float32Array(3*this.particleControl.particleNum),this.eulers=new Float32Array(3*this.particleControl.particleNum),this.sizes=new Float32Array(this.particleControl.particleNum),this.initParticle()}return _createClass(e,[{key:"initParticle",value:function(){var t=this.particleControl,e=t.particleNum,i=t.area;t.particles=new Array(e);for(var n=new THREE.Vector3,r=0,o=0;o<e;o++){t.particles[o]=new h;var a=t.particles[o];n.x=.3*l()+.8,n.y=.2*l()-1,n.z=.3*l()+.5,n.normalize(),r=5+1*Math.random(),n.multiplyScalar(r),a.setVelocity(n.x,n.y,n.z),a.setRotation(l()*s*.5,l()*s*.5,l()*s*.5),a.setPosition(l()*i[0],l()*i[1],l()*i[2]),a.setEulerAngles(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2),a.setSize(4+1*Math.random())}this.geometry.setAttribute("position",new THREE.BufferAttribute(this.positions,3)),this.geometry.setAttribute("aEuler",new THREE.BufferAttribute(this.eulers,3)),this.geometry.setAttribute("aSize",new THREE.BufferAttribute(this.sizes,1)),this.uniforms={far:{type:"f",value:i[2]}},this.points=new THREE.Points(this.geometry,new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"\n    attribute vec3 aEuler;\n    attribute float aSize;\n\n    varying float pAlpha;\n\n    varying vec3 normX;\n    varying vec3 normY;\n    varying vec3 normZ;\n\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * mvPosition;\n        gl_PointSize = aSize * (300.0 / -mvPosition.z);\n\n        float pdist = length(mvPosition.xyz);\n        pAlpha = smoothstep(0.0, 1.0, (pdist - 0.1) / 400.);\n\n        // Caculate Normal\n        vec3 elrsn = sin(aEuler);\n        vec3 elrcs = cos(aEuler);\n        mat3 rotx = mat3(\n            1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n        );\n        mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n        );\n        mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0, \n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n        );\n        mat3 rotmat = rotx * roty * rotz;\n\n        mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n        );\n        normX = trrotm[0];\n        normY = trrotm[1];\n        normZ = trrotm[2];\n    }\n    ",fragmentShader:"\n    precision highp float;\n\n    varying vec3 normX;\n    varying vec3 normY;\n    varying vec3 normZ;\n    varying float pAlpha;\n\n    float diffuse = 0.9;\n    float specular = 0.8;\n    float rstop = 0.1;\n\n    // pos orign r.ab\n    float ellipse(vec2 p, vec2 o, vec2 r) { \n        vec2 lp = (p - o) / r;\n        return length(lp) - 1.0;\n    }\n\n    void main() {\n        vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n        vec3 d = vec3(0.0, 0.0, -1.0);\n        float nd = normZ.z; //dot(-normZ, d);\n        if(abs(nd) < 0.0001) discard;\n\n        float np = dot(normZ, p);\n        vec3 tp = p + d * np / nd;//dot(-normZ, d) / dot(-normZ, p);\n        // Back 2D \n        vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n        // angle = 15 degree\n        const float flwrsn = 0.258819045102521;\n        const float flwrcs = 0.965925826289068;\n        mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n        // abs => double [0,1]\n        vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n        float r;\n        if(flwrp.x < 0.0) {\n        // middle part(double)\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n        } else {\n            // out part(double)\n            r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n        }\n        if(r > rstop) discard;\n        // r = ellipse(flwrp, vec2(0.250,0.440), vec2(0.140,0.190));\n        vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n        \n        float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n        col *= vec3(1.0, grady, grady);\n        col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n        col = col * diffuse + specular;\n        \n        float alpha = (0.5 - r / (rstop * 1.0));\n        alpha = smoothstep(0.0, 1.0, alpha) * pAlpha;\n        \n        // gl_FragColor = vec4(vec3(alpha), 1.);\n        // 櫻花顏色\n        gl_FragColor = vec4(col*0.65, 1);\n    }\n    "})),this.scene.add(this.points)}},{key:"repeatPos",value:function(t,e){for(var i=0;i<3;i++){var n=e[i];Math.abs(t.position[i])-.5*t.size>n&&(0<t.position[i]?t.position[i]-=2*n:t.position[i]+=2*n)}}},{key:"repeatEuler",value:function(t){for(var e=0;e<3;e++)t.euler[e]=t.euler[e]%s,t.euler[e]<0&&(t.euler[e]+=s)}},{key:"renderParticle",value:function(){for(var t=this.particleControl,e=t.particleNum,i=t.area,n=t.particles,r=0;r<e;r++){var o=n[r];o.update(this.deltaTime),this.repeatPos(o,i),this.repeatEuler(o),this.positions[3*r]=o.position[0],this.positions[3*r+1]=o.position[1],this.positions[3*r+2]=o.position[2],this.eulers[3*r]=o.euler[0],this.eulers[3*r+1]=o.euler[1],this.eulers[3*r+2]=o.euler[2],this.sizes[r]=o.size}this.geometry.attributes.position.needsUpdate=!0,this.geometry.attributes.aEuler.needsUpdate=!0,this.geometry.attributes.aSize.needsUpdate=!0}},{key:"render",value:function(t){this.deltaTime=t,this.renderParticle()}}]),e}();new(function(){function n(t,e){_classCallCheck(this,n),this.container=t,768<window.innerWidth?(this.width=window.innerWidth,this.height=window.innerHeight):(this.width=750,this.height=1330),this.clock=new THREE.Clock,(this.camera=new THREE.PerspectiveCamera(45,750/1330,1,1e3)).position.set(0,0,10);var i=this.renderer=new THREE.WebGLRenderer({antialias:!1,alpha:!0});i.domElement.id="canvasWebGL",i.setPixelRatio(window.devicePixelRatio),i.setSize(this.width,this.height),i.gammaFactor=2.2,i.setClearColor(0,1),i.setClearAlpha(0),t.appendChild(i.domElement),this.initScene(e),this.initEvents()}return _createClass(n,[{key:"initScene",value:function(t){var e=this.scene=new THREE.Scene;this.sakura=new r(e),this.animete(),"function"==typeof t&&t()}},{key:"initEvents",value:function(){window.addEventListener("resize",this.onWindowResize.bind(this),!1)}},{key:"onWindowResize",value:function(){768<window.innerWidth?(this.width=window.innerWidth,this.height=window.innerHeight):(this.width=750,this.height=1330),this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height)}},{key:"animete",value:function(){var t=this.clock.getDelta()*e;this.sakura.render(t),this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.animete.bind(this))}}]),n}())(document.querySelector("#tranarea"))};