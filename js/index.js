"use strict";var index_view=new Vue({el:"#app",data:{scoreArr:[{name:"111",pic:"xxx"},{name:"222",pic:"xxx"},{name:"333",pic:"xxx"},{name:"444",pic:"xxx"},{name:"555",pic:"xxx"},{name:"666",pic:"xxx"},{name:"777",pic:"xxx"},{name:"888",pic:"xxx"},{name:"999",pic:"xxx"},{name:"101010",pic:"xxx"},{name:"111111",pic:"xxx"},{name:"121212",pic:"xxx"},{name:"131313",pic:"xxx"},{name:"141414",pic:"xxx"},{name:"151515",pic:"xxx"}],randomArr:[]},methods:{pushArr:function(){var e,t=this;if(t.randomArr=[],(e=t.scoreArr).length<=0)alert("沒有資料了");else for(var n=0;n<5;n++){var a=Math.floor(Math.random()*e.length);t.randomArr.push(t.shuffle(e)[a]),e.splice(a,1)}},shuffle:function(e){var t,n,a;for(t=e.length-1;0<t;t--)n=Math.floor(Math.random()*(t+1)),a=e[t],e[t]=e[n],e[n]=a;return e},kvAni:function(){var e=.3,t=new TimelineMax({delay:.3,repeat:-1});t.from(".kv",e,{opacity:0}),t.from(".hello",.6,{opacity:0}),t.from(".hello > .slogn",.6,{opacity:0,x:-50},"-=0.3"),t.to(".hello > .slogn",.6,{opacity:0,x:50},"+=3"),t.from(".whois",.6,{opacity:0}),t.from(".whois > .slogn",.6,{opacity:0}),t.from(".portfolio",.6,{opacity:0},"-=0.6"),t.to(".whois > .slogn",.6,{opacity:0},"+=3"),t.to(".portfolio",.6,{opacity:0},"-=0.6")},winScroll:function(){var t=document.getElementsByClassName("kv")[0].offsetHeight;window.onscroll=function(){var e=document.documentElement.scrollTop||window.pageYOffset||document.body.scrollTop;t/2<e?(document.getElementsByClassName("nav")[0].style.background="#dddddd",document.getElementsByClassName("nav")[0].style.boxShadow="0 1px 5px rgba(0,0,0,0.3)"):(document.getElementsByClassName("nav")[0].style.background="none",document.getElementsByClassName("nav")[0].style.boxShadow="none")}},gamePlay:function(){var e,t=0,n=!1;e=Math.ceil(5*Math.random()),console.log(e);var a=setInterval(function(){n?(0<t&&(t--,document.getElementById("game").style.transform="translateY("+(100-t)+"%)"),0==t&&(n=!1)):(t<100&&(t++,document.getElementById("game").style.transform="translateY("+(100-t)+"%)"),100==t&&(n=!0))},e);document.getElementById("stopG").addEventListener("click",function(){clearInterval(a)})},gameCss:function(){var e=0,n=setInterval(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transform="translateY(0)",document.getElementById("game2").style.transition=e+"s",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-25%)",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-50%)",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-75%)",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-100%)"},200)},150)},100)},50)},300);document.getElementById("stopG").addEventListener("click",function(){for(var e=setTimeout(";"),t=0;t<e;t++)clearTimeout(t);clearInterval(n)})}},mounted:function(){this.kvAni(),this.winScroll(),particlesJS("particles-js",{particles:{number:{value:80,density:{enable:!0,value_area:800}},color:{value:"#000000"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.5,random:!1,anim:{enable:!1,speed:1,opacity_min:.1,sync:!1}},size:{value:3,random:!0,anim:{enable:!1,speed:40,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:100,color:"#000000",opacity:.4,width:1},move:{enable:!0,speed:6,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!1,mode:"repulse"},onclick:{enable:!1,mode:"push"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}}},retina_detect:!0})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
