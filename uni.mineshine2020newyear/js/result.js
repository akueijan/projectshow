"use strict";var result_view=new Vue({el:"#app",data:{step:2,code:"",name:"",friendName:"",address:"",mobile:"",text:"",textImg:"",serialNumber:"",agree:!1,link:"",savedata:!1,user:{shareImg:"",userImg1:"",userImg2:"",userImg3:""},keyWord:{word1:"",word2:"",word3:""}},methods:{getLocalStorage:function(){var t=this;t.user.shareImg=localStorage.getItem("shareImg"),t.toDataURL(localStorage.getItem("userImg1"),function(e){t.user.userImg1=e}),t.toDataURL(localStorage.getItem("userImg2"),function(e){t.user.userImg2=e}),t.toDataURL(localStorage.getItem("userImg3"),function(e){t.user.userImg3=e}),t.keyWord.word1=localStorage.getItem("keyword1"),t.keyWord.word2=localStorage.getItem("keyword2"),t.keyWord.word3=localStorage.getItem("keyword3"),$("body").loadpage("close")},getImg:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"MineShine/image/").concat(t.code),headers:{Authorization:"Bearer "+t.gToken},method:"GET"}).done(function(e){t.serialNumber=e.data.serialNumber,t.user.shareImg=e.data.shareImg,t.toDataURL(e.data.userImg1,function(e){t.user.userImg1=e}),t.toDataURL(e.data.userImg2,function(e){t.user.userImg2=e}),t.toDataURL(e.data.userImg3,function(e){t.user.userImg3=e}),t.toDataURL(e.data.shareImg,function(e){t.user.shareImg=e}),t.keyWord.word1=e.data.keyword1,t.keyWord.word2=e.data.keyword2,t.keyWord.word3=e.data.keyword3,t.link=e.data.link,t.savedata=e.data.saveData,$("body").loadpage("close")})},saveData:function(){var t=this,e=new FormData;return e.append("code",t.code),e.append("name",t.name),e.append("friendName",t.friendName),e.append("address",t.address),e.append("mobile",t.mobile),e.append("textImg",t.textImg),e.append("serialNumber",t.serialNumber),e.append("reCaptcha",t.reCaptcha),$.ajax({url:"".concat(friendo_url,"MineShine/data"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",processData:!1,contentType:!1}).done(function(e){e.success?(t.resultLoad=!1,t.popup=!0,t.popEvent="type",t.popPage="suc"):(alert("您已填過表單 感謝您的參與"),window.location.href="index.html")})},downloadImg:function(){var e=document.getElementById("dl1"),t=document.getElementById("dl2"),a=document.getElementById("dl3"),o=document.getElementById("dl4"),r=Date.now();e.setAttribute("download","img"+r),t.setAttribute("download","img"+r+1),a.setAttribute("download","img"+r+2),o.setAttribute("download","img"+r+3),setTimeout(function(){e.click(),t.click(),a.click(),o.click()},500)},giftput:function(){var t=this;if(!t.loading){if(""==t.name)return t.popup=!0,t.popEvent="type",void(t.popPage="dataerr");if(""==t.mobile||!t.mobile.match(/^09[0-9]{8}$/))return t.popup=!0,t.popEvent="type",void(t.popPage="dataerr");if(""==t.friendName)return t.popup=!0,t.popEvent="type",void(t.popPage="dataerr");if(""==t.text)return t.popup=!0,t.popEvent="type",void(t.popPage="dataerr");if(0==t.agree)return t.popup=!0,t.popEvent="type",void(t.popPage="dataerr");t.popup=!0,t.resultLoad=!0;var e=document.getElementById("giftbox"),a=e.getContext("2d");e.width=2835,e.height=2421,a.clearRect(0,0,e.width,e.height),a.font="50px Arial";var o=new Image,r=new Image,n=new Image,d=new Image,i=new Image,s=new Image,p=new Image,u=new Promise(function(e){o.addEventListener("load",function(){e()}),o.src="./images/giftboxbg.jpg"}),g=new Promise(function(e){r.addEventListener("load",function(){e()}),r.src=t.user.userImg1}),m=new Promise(function(e){n.addEventListener("load",function(){e()}),n.src=t.user.userImg2}),c=new Promise(function(e){d.addEventListener("load",function(){e()}),d.src=t.user.userImg3}),l=new Promise(function(e){i.addEventListener("load",function(){e()}),i.src=t.keyWord.word1}),h=new Promise(function(e){s.addEventListener("load",function(){e()}),s.src=t.keyWord.word2}),w=new Promise(function(e){p.addEventListener("load",function(){e()}),p.src=t.keyWord.word3});Promise.all([u,g,m,c,l,h,w]).then(function(){a.drawImage(o,0,0,o.width,o.height,0,0,e.width,e.height),a.drawImage(r,0,0,500,500,327,1433,505,486),a.drawImage(n,0,0,500,500,925,1505,505,486),a.drawImage(d,0,0,500,500,1498,1459,505,486),a.fillText(t.serialNumber,320,385),a.rotate(-9*Math.PI/180),a.drawImage(i,0,0,i.width,i.height,130,1200,.8*i.width,.8*i.height),a.font="bold 56px Noto Sans TC",a.fillStyle="#f2dc24",a.textAlign="start",a.fillText("To: "+t.friendName,1065,1e3),a.textAlign="center",a.fillText(t.text,1295,1080),a.rotate(9*Math.PI/180),a.rotate(-1*Math.PI/180),a.drawImage(s,0,0,s.width,s.height,900,1190,.8*s.width,.8*s.height),a.rotate(1*Math.PI/180),a.rotate(8*Math.PI/180),a.drawImage(p,0,0,p.width,p.height,1660,860,.8*p.width,.8*p.height),a.rotate(-8*Math.PI/180),t.textImg=e.toDataURL("image/jpeg",1),t.resultLoad=!1,t.popup=!0,t.popEvent="type",t.popPage="suc"})}},toFb:function(){var t=this;return new Promise(function(e){t.popup=!0,t.popEvent="type",t.popPage="tip",e()})},fbshare:function(){var e=this.link;window.ActiveXObject||window;return this.popupClose(),this.step=3,window.open("https://www.facebook.com/sharer/sharer.php?u="+e+"&hashtag=%23麥香曬友情"),!1},toDataURL:function(e,t){var a=new XMLHttpRequest;a.onload=function(){var e=new FileReader;e.onloadend=function(){t(e.result)},e.readAsDataURL(a.response)},a.open("GET",e),a.responseType="blob",a.send()},checkBrowser:function(){var e=this,t=new MobileDetect(window.navigator.userAgent),a=-1<navigator.userAgent.indexOf("FBAV");t.match(/android/i)?a?(e.popup=!0,e.popEvent="fbapp"):e.downloadImg():t.match(/(iphone|ipad|ipod);?/i)?(e.popup=!0,e.popEvent="type",e.popPage="ios"):e.downloadImg()}},created:function(){},mounted:function(){$("body").loadpage("init",{async:!0}),this.getLocalStorage()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
